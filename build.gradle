import java.text.SimpleDateFormat

plugins {
    id 'java-library'
    id 'application'
    id 'net.nemerosa.versioning' version '3.0.0'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

description = 'CRaC 8 demo'

Date buildTimeAndDate = new Date()
ext {
    buildDate = new SimpleDateFormat('yyyy-MM.dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}

application {
    mainModule = 'eu.hansolo.crac8'
    mainClass  = 'eu.hansolo.crac8.Main'
}

repositories {
    mavenCentral()
}

dependencies {
    //implementation ("io.github.crac:org-crac:0.1.3")
    implementation("com.google.code.gson:gson:2.10.1")
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

jar {
    manifest {
        attributes(
                'Build-By'              : System.properties['user.name'],
                'Created-By'            : System.properties['java.version'] + " (" + System.properties['java.vendor'] + "  " + System.properties['java.vm.version'] + ")",
                'Build-Date'            : project.buildDate,
                'Build-Time'            : project.buildTime,
                'Build-Revision'        : versioning.info.commit,
                'Specification-Title'   : project.name,
                'Specification-Version' : project.version,
                'Implementation-Title'  : project.name,
                'Implementation-Version': project.version,
                'Bundle-Name'           : project.name,
                'Bundle-License'        : 'https://www.apache.org/licenses/LICENSE-2.0;description=Apache License Version 2.0;link=https://spdx.org/licenses/Apache-2.0.html',
                'Bundle-Description'    : description,
                'Bundle-SymbolicName'   : 'eu.hansolo.crac8',
                'Class-Path'            : '${project.name}-${project.version}.jar',
                'Main-Class'            : application.mainClass.get()

        )
    }
}

shadowJar {
    archiveClassifier.set('fat');
}

task copyDependencies(type: Copy) {
    from(configurations.runtimeClasspath)
    into "${buildDir}/dependencies/flat"
}
assemble.dependsOn(copyDependencies)

if (JavaVersion.current().isJava8Compatible()){
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

task Main (type: JavaExec) {
    mainClass = "eu.hansolo.crac8.Main"
    classpath = sourceSets.main.runtimeClasspath
}